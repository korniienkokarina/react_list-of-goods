{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleNameSort","setState","ALPHABET","handleLengthSort","LENGTH","handleReverseSort","handleReset","goods","visibleGoods","sort","goodA","goodB","localeCompare","length","reverse","getReorderedGoods","this","notChanged","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,iBAAmB,WACjB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,kBAAoB,WAClB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAfjD,EAkBES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QArBzB,4CAyBE,WACE,IAAMQ,EA1DH,SACLA,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQb,GACN,KAAKL,EAASS,SACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKlB,EAASW,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,KAAKpB,EAASM,KACd,QACE,OAAO,MAITF,GACFW,EAAaM,UAGRN,EAkCSO,CAAkBrB,EAAiBsB,KAAKpB,OAEhDqB,EAAaD,KAAKpB,MAAME,WAAaL,EAASM,OAC9CiB,KAAKpB,MAAMC,WAEjB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASJ,KAAKhB,eACdkB,UAAWG,IAAW,iBAAkB,CACtC,WAAYL,KAAKpB,MAAME,WAAaL,EAASS,WAJjD,iCAUA,wBACEiB,KAAK,SACLC,QAASJ,KAAKb,iBACde,UAAWG,IAAW,oBAAqB,CACzC,WAAYL,KAAKpB,MAAME,WAAaL,EAASW,SAJjD,4BAUA,wBACEe,KAAK,SACLC,QAASJ,KAAKX,kBACda,UAAWG,IAAW,oBAAqB,CACzC,YAAaL,KAAKpB,MAAMC,aAJ5B,sBAUEoB,GACA,wBACEE,KAAK,SACLC,QAASJ,KAAKV,YACdY,UAAU,4BAHZ,sBAUJ,6BACE,6BACGX,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA9EtC,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f738b1c3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleNameSort = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleLengthSort = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverseSort = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    const notChanged = this.state.sortType === SortType.NONE\n      && !this.state.isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.handleNameSort}\n            className={classNames('button is-info', {\n              'is-light': this.state.sortType !== SortType.ALPHABET,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleLengthSort}\n            className={classNames('button is-success', {\n              'is-light': this.state.sortType !== SortType.LENGTH,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleReverseSort}\n            className={classNames('button is-warning', {\n              'is-light': !this.state.isReversed,\n            })}\n          >\n            Reverse\n          </button>\n\n          {!notChanged && (\n            <button\n              type=\"button\"\n              onClick={this.handleReset}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}